import csv
import os

from utilities import sqlutils, stringutils, globals


# Get a list of mapped fields
map = stringutils.getJsonMapping(globals.CURRENT_YEAR, 'ibd')


filename = map["FILENAME"] # Source filename (defined in mappings JSON file)

os.chdir(globals.CSV_SOURCE_FOLDER);


# Populate a dictionary object with values from medication table.  This greatly improves performance over
# looking up values for each INSERT or UPDATE statement.  Also helps prevent duplicates.
sql = "SELECT patientID, encryptedPatientID FROM patient;"


patients = sqlutils.tableToDictionary(sql, 1, 0)

# Start sibdq data import
counter = 0
with open(os.path.abspath(filename), 'rU') as f:
    for row in csv.reader(f):
        if any(row) and counter > 0:
            # Even though the primary key used for patients' identifiers is auto-generated by MySQL
            # (sequential number), we still store the original MRN encrypted with MD5 hash
            # to link back to external records and to identify new patient records.
            rawMrn = stringutils.prefixZeros(row[map['MRN']], globals.MAX_MRN_LENGTH)
            mrn = stringutils.computeMD5hash(rawMrn)

            if mrn in patients.keys():

                patientID = patients[mrn]
                yearDx = row[map['YEAR_DIAGNOSIS']]
                dstype = row[map['DSTYPE']]
                l1 = row[map['L1']]
                l2 = row[map['L2']]
                l3 = row[map['L3']]
                l4 = row[map['L4']]
                b1 = row[map['B1']]
                b2 = row[map['B2']]
                b3 = row[map['B3']]
                p = row[map['P']]
                e1 = row[map['E1']]
                e2 = row[map['E2']]
                e3 = row[map['E3']]


                sql = "INSERT INTO patient_ibd (fk_patientID,yearDiagnosis,dstype,"
                sql+= "l1,l2,l3,l4,b1,b2,b3,p,e1,e2,e3)"
                sql += "VALUES (%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s);"
                sqlutils.execMysqlQuery(sql, (patientID, yearDx, dstype, l1, l2, l3, l4, b1, b2, b3, p, e1, e2, e3))


        counter = counter + 1  # Note - counter is only used to ignore the first row of the spreadsheet (contains column headings)


