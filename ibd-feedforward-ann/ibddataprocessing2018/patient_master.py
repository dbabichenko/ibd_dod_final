import csv
import os

from utilities import sqlutils, stringutils, globals

#Creates a master map between MRNs and auto-generated patient IDs


# Get a list of mapped fields
map = stringutils.getJsonMapping(globals.CURRENT_YEAR, 'patients')

# Dictionary of patient IDs
sql = "SELECT patientID, encryptedPatientID FROM patient;"
patients = sqlutils.tableToDictionary(sql, 1, 0)

outputFilePath = globals.OUTPUT_FOLDER_PATH + "/master_ID_map.csv" #'/Users/dmitriyb/Dropbox/Research/IBD Research/pyimport/ouptut/master_ID_map.csv'

#Import patient information
filename = map["FILENAME"] # Source filename (defined in mappings JSON file)

os.chdir(globals.CSV_SOURCE_FOLDER);

# Start patient data import
counter = 0
outputFile = open(outputFilePath,'w')
with open(os.path.abspath(filename), 'rU') as f:
    for row in csv.reader(f):
        if any(row) and counter > 0:
            # Even though the primary key used for patients' identifiers is auto-generated by MySQL
            # (sequential number), we still store the original MRN encrypted with MD5 hash
            # to link back to external records and to identify new patient records.
            mrn = row[map['MRN']]
            encryptedMrn = stringutils.computeMD5hash(mrn)
            if encryptedMrn in patients.keys():
                patientID = patients[encryptedMrn]
                strRow = mrn + ", " + encryptedMrn + ", " + str(patientID) + "\n"
                outputFile.write(strRow)



        counter = counter + 1  # Note - counter is only used to ignore the first row of the spreadsheet (contains column headings)

outputFile.close()

