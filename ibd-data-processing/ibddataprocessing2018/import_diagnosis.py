import csv
import os

from utilities import sqlutils, stringutils, globals

# This script imports diagnosis data for existing study patients
# Data is imported from IBD_Reg_Pts_w_Problem_List_2014-06-11.csv
# The following columns are imported:
#       PAT_ID (MRN)
#       DATE_OF_ENTRY
#       NOTED_DATE
#       RESOLVED_DATE
#       UPDATE_DATE
#       DESCRIPTION
#       DIAGNOSIS CODE
#       DX_NAME
#       CLASS OF PROBLEM
#       PROBLEM_STATUS
#       PRIORITY
# This script populates the following two tables in ibd_import database:
#       diagnosis
#       patient_diagnosis
# Excel to database field mappings are defined in mappings/2014/diagnosis.json


# Get a list of mapped fields
map = stringutils.getJsonMapping(globals.CURRENT_YEAR, 'diagnosis')

# Populate a dictionary object with values from medication table.  This greatly improves performance over
# looking up values for each INSERT or UPDATE statement.  Also helps prevent duplicates.
sql = "SELECT patientID, encryptedPatientID FROM patient;"
patients = sqlutils.tableToDictionary(sql, 1, 0)

filename = map["FILENAME"] # Source filename (defined in mappings JSON file)

os.chdir(globals.CSV_SOURCE_FOLDER);


# Start diagnosis data import
counter = 0
with open(os.path.abspath(filename), 'rU') as f:
    for row in csv.reader(f):
        if any(row) and counter > 0:
            # Even though the primary key used for patients' identifiers is auto-generated by MySQL
            # (sequential number), we still store the original MRN encrypted with MD5 hash
            # to link back to external records and to identify new patient records.
            rawMrn = stringutils.prefixZeros(row[map['MRN']], globals.MAX_MRN_LENGTH)
            mrn = stringutils.computeMD5hash(rawMrn)
            diagnosisID = row[map['DIAGNOSIS CODE']]
            if mrn in patients.keys():
                patientID = patients[mrn]

                dateOfEntry = stringutils.convertDateToMySQL(row[map['DATE_OF_ENTRY']].strip())
                notedDate = stringutils.convertDateToMySQL(row[map['NOTED_DATE']].strip())
                resolvedDate = stringutils.convertDateToMySQL(row[map['RESOLVED_DATE']].strip())
                updateDate = stringutils.convertDateToMySQL(row[map['UPDATE_DATE']].strip())
                description = row[map['DESCRIPTION']]
                diagnosisID = row[map['DIAGNOSIS CODE']]
                diagnosisName = row[map['DX_NAME']]
                classOfProblem = row[map['CLASS OF PROBLEM']]
                problemStatus = row[map['PROBLEM_STATUS']]
                priority = row[map['PRIORITY']]


                sql = "INSERT INTO diagnoses (fk_patientID,dateOfEntry,notedDate,resolvedDate,updateDate,description,diagnosisID,diagnosisName,classOfProblem,problemStatus,priority) "
                sql += "VALUES (%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s);"
                sqlutils.execMysqlQuery(sql, (patientID, dateOfEntry, notedDate, resolvedDate, updateDate, description, diagnosisID, diagnosisName, classOfProblem, problemStatus, priority))


        counter = counter + 1  # Note - counter is only used to ignore the first row of the spreadsheet (contains column headings)


