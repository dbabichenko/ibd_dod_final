import csv
import os

from utilities import sqlutils, stringutils, globals


# Get a list of mapped fields
map = stringutils.getJsonMapping(globals.CURRENT_YEAR, 'social')


filename = map["FILENAME"] # Source filename (defined in mappings JSON file)

os.chdir(globals.CSV_SOURCE_FOLDER);


# Populate a dictionary object with values from medication table.  This greatly improves performance over
# looking up values for each INSERT or UPDATE statement.  Also helps prevent duplicates.
sql = "SELECT patientID, encryptedPatientID FROM patient;"
patients = sqlutils.tableToDictionary(sql, 1, 0)

# Start sibdq data import
counter = 0
with open(os.path.abspath(filename), 'rU') as f:
    for row in csv.reader(f):
        if any(row) and counter > 0:
            # Even though the primary key used for patients' identifiers is auto-generated by MySQL
            # (sequential number), we still store the original MRN encrypted with MD5 hash
            # to link back to external records and to identify new patient records.
            rawMrn = stringutils.prefixZeros(row[map['MRN']], globals.MAX_MRN_LENGTH)
            mrn = stringutils.computeMD5hash(rawMrn)

            print(rawMrn)

            if mrn in patients.keys():

                patientID = patients[mrn]
                contactDate = stringutils.convertDateToMySQL(row[map['CONTACT_DATE']].strip())
                tobaccoUser = row[map['TOBACCO_USER']]
                smokingTobUse = row[map['SMOKING_TOB_USE']]
                smokelessTobUse = row[map['SMOKELESS_TOB_USE']]
                tobaccoPackPerDay = stringutils.clean_num_vals(row[map['TOBACCO_PAK_PER_DY']])
                tobaccoUsedYears = stringutils.clean_num_vals(row[map['TOBACCO_USED_YEARS']])
                tobaccoComment = row[map['TOBACCO_COMMENT']]
                smokingQuitDate = stringutils.convertDateToMySQL(row[map['SMOKING_QUIT_DATE']].strip())
                cigarettesYN = 1 if row[map['CIGARETTES_YN']] == 'Y' else 0
                pipesYN = 1 if row[map['PIPES_YN']] == 'Y' else 0
                cigarsYN = 1 if row[map['CIGARS_YN']] == 'Y' else 0
                snuffYN = 1 if row[map['SNUFF_YN']] == 'Y' else 0
                chewYN = 1 if row[map['CHEW_YN']] == 'Y' else 0
                alcoholUse = row[map['ALCOHOL_USE']]
                alcoholOzWeek = stringutils.clean_num_vals(row[map['ALCOHOL_OZ_PER_WK']])
                print(alcoholOzWeek)
                alcoholComment = row[map['ALCOHOL_COMMENT']]



                sql = "INSERT INTO social_history (fk_patientID,contactDate,tobaccoUser,smokingTobaccoUse,"
                sql+= "smokelessTobaccoUse,tobaccoPackPerDay,tobaccoUsedYears,tobaccoComment,smokingQuitDate,"
                sql+="cigarettesYN,pipesYN,snuffYN,chewYN,alcoholUse,alcoholOzWeek,alcoholComment)"
                sql += "VALUES (%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s);"
                sqlutils.execMysqlQuery(sql, (patientID, contactDate, tobaccoUser, smokingTobUse, smokelessTobUse, tobaccoPackPerDay, tobaccoUsedYears, tobaccoComment, smokingQuitDate, cigarettesYN, pipesYN, snuffYN, chewYN, alcoholUse, alcoholOzWeek, alcoholComment))


        counter = counter + 1  # Note - counter is only used to ignore the first row of the spreadsheet (contains column headings)


