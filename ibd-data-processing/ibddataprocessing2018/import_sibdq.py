import csv
import os

from utilities import sqlutils, stringutils, globals

def clean_num_vals(val):
    if val == "":
        return -99
    else:
        temp = val.split("=")
        return temp[0]


# This script imports immunization data for existing study patients
# Data is imported from SIBDQ_Pain_Questionaire_2014-02-21.csv
# The following columns are imported:
#       PAT_ID (MRN)
#       CONTACT_DATE
#       ENC_TYPE
#       VISIT_DEPT_NAME
#       COMPLETED_ON
# This script populates the following tables in ibd_import database:
#       questionnaire
#       questionnaire_questions
#       patient_questionnaire_questions
# Excel to database field mappings are defined in mappings/2014/sibdq.json


# Get a list of mapped fields
map = stringutils.getJsonMapping(globals.CURRENT_YEAR, 'sibdq')


filename = map["FILENAME"] # Source filename (defined in mappings JSON file)

os.chdir(globals.CSV_SOURCE_FOLDER);


# Populate a dictionary object with values from medication table.  This greatly improves performance over
# looking up values for each INSERT or UPDATE statement.  Also helps prevent duplicates.
sql = "SELECT patientID, encryptedPatientID FROM patient;"
patients = sqlutils.tableToDictionary(sql, 1, 0)

# Start sibdq data import
counter = 0
with open(os.path.abspath(filename), 'rU') as f:
    for row in csv.reader(f):
        if any(row) and counter > 0:
            # Even though the primary key used for patients' identifiers is auto-generated by MySQL
            # (sequential number), we still store the original MRN encrypted with MD5 hash
            # to link back to external records and to identify new patient records.
            rawMrn = stringutils.prefixZeros(row[map['MRN']], globals.MAX_MRN_LENGTH)
            mrn = stringutils.computeMD5hash(rawMrn)



            if mrn in patients.keys():

                patientID = patients[mrn]
                contactDate = stringutils.convertDateToMySQL(row[map['CONTACT_DATE']].strip())
                encType = "Unknown" if row[map['ENC_TYPE']].strip() == "" else row[map['ENC_TYPE']].strip()
                deptName = row[map['VISIT_DEPT_NAME']]
                completedDate = stringutils.convertDateToMySQL(row[map['COMPLETED_ON']].strip())
                q01 = clean_num_vals(row[map['Q01_FEELING_FATIGUE']])
                q02 = clean_num_vals(row[map['Q02_SOCIAL_ENGAGEMENT']])
                q03 = clean_num_vals(row[map['Q03_DIFFICULTY_ACTIVITIES']])
                q04 = clean_num_vals(row[map['Q04_TROUBLED_PAIN']])
                q05 = clean_num_vals(row[map['Q05_FELT_DEPRESSED']])
                q06 = clean_num_vals(row[map['Q06_PROBLEM_PASSING']])
                q07 = clean_num_vals(row[map['Q07_MAINTAINING_WEIGHT']])
                q08 = clean_num_vals(row[map['Q08_FELT_RELAXED']])
                q09 = clean_num_vals(row[map['Q09_TROUBLED_EMPTY']])
                q10 = clean_num_vals(row[map['Q10_FELT_ANGRY']])
                painToday = 1 if row[map['PAIN_TODAY']] == 'Yes' else 0


                sql = "INSERT INTO sibdq (fk_patientID,contactDate,encounterType,visitDepartment,completedOn,"
                sql+= "q01_feelingFatigue,q02_socialEngagement,q03_difficultyActivities,q04_troubledPain,q05_feltDepressed,"
                sql+= "q06_problemPassing,q07_maintainingWeight,q08_feltRelaxed,q09_troubledEmpty,q10_feltAngry,painToday) "
                sql += "VALUES (%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s);"
                sqlutils.execMysqlQuery(sql, (patientID, contactDate, encType, deptName, completedDate, q01, q02, q03, q04, q05, q06, q07, q08, q09, q10, painToday))


        counter = counter + 1  # Note - counter is only used to ignore the first row of the spreadsheet (contains column headings)


