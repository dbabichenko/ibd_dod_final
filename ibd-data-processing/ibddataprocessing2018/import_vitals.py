import csv
import os

from utilities import sqlutils, stringutils, globals

# This script imports vital sign data for existing study patients
# Data is imported from IBD_Reg_Pts_Vitals_BP_Ht_Wt_2014-03-04.csv
#       PATIENT_ID (MRN)
# 	    ENCOUNTER_TYPE
#       CONTACT_DATE
#       BMI
#       HEIGHT
#       WEIGHT
#       PULSE
#       RESPIRATIONS
#       BP_RECORDED_DATE_TIME
#       BP
#       BP_POSITION
# This script populates the following table in ibd_import database:
#       patient_vitals
# Excel to database field mappings are defined in mappings/2014/vitals.json


# Get a list of mapped fields
map = stringutils.getJsonMapping(globals.CURRENT_YEAR, 'vitals')

# Populate a dictionary object with values from patient table.  This greatly improves performance over
# looking up values for each INSERT or UPDATE statement.  Also helps prevent duplicates.

sql = "SELECT patientID, encryptedPatientID FROM patient;"
patients = sqlutils.tableToDictionary(sql, 1, 0)



filename = map["FILENAME"] # Source filename (defined in mappings JSON file)

os.chdir(globals.CSV_SOURCE_FOLDER);


# Start vitals data import
counter = 0
with open(os.path.abspath(filename), 'rU') as f:
    for row in csv.reader(f):
        if any(row) and counter > 0:
            # Even though the primary key used for patients' identifiers is auto-generated by MySQL
            # (sequential number), we still store the original MRN encrypted with MD5 hash
            # to link back to external records and to identify new patient records.
            rawMrn = stringutils.prefixZeros(row[map['MRN']], globals.MAX_MRN_LENGTH)
            mrn = stringutils.computeMD5hash(rawMrn)
            if mrn in patients.keys():
                print(rawMrn)
                patientID = patients[mrn]

                # Encounter Type
                encounterTypeName = "Unknown" if row[map['ENCOUNTER_TYPE']].strip() == "" else row[map['ENCOUNTER_TYPE']].strip()

                # Contact date (needs to be formatted)
                contactDate = stringutils.convertDateToMySQL(row[map['CONTACT_DATE']].strip())

                # BMI
                bmi = stringutils.clean_num_vals(row[map['BMI']])

                # HEIGHT
                height = row[map['HEIGHT']]

                # WEIGHT
                weight = stringutils.clean_num_vals(row[map['WEIGHT']])

                # PULSE
                pulse = stringutils.clean_num_vals(row[map['PULSE']])

                # RESPIRATIONS
                resp = stringutils.clean_num_vals(row[map['RESPIRATIONS']])

                # BP_RECORDED_DATE_TIME
                bpRecordedDateTime = stringutils.convertDateTimeToMySQL(row[map['BP_RECORDED_DATE_TIME']].strip())

                # BP
                bp = row[map['BP']]

                # BP_POSITION
                bpPosition = row[map['BP_POSITION']]


                sql = "INSERT INTO vitals (fk_patientID, encounterTypeName, contactDate, bmi, height, weight, pulse, respirations, bpRecordedDateTime, bp, bpPosition) "
                sql += "VALUES (%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s);"

                sqlutils.execMysqlQuery(sql, (str(patientID), encounterTypeName, contactDate, str(bmi), str(height), str(weight), str(pulse), str(resp), bpRecordedDateTime, bp, bpPosition))


        counter = counter + 1  # Note - counter is only used to ignore the first row of the spreadsheet (contains column headings)


