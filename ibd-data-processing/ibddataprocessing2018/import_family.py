import csv
import os

from utilities import sqlutils, stringutils, globals



# Get a list of mapped fields
map = stringutils.getJsonMapping(globals.CURRENT_YEAR, 'family')

# Populate a dictionary object with values from patient table.  This greatly improves performance over
# looking up values for each INSERT or UPDATE statement.  Also helps prevent duplicates.

sql = "SELECT patientID, encryptedPatientID FROM patient;"
patients = sqlutils.tableToDictionary(sql, 1, 0)



filename = map["FILENAME"] # Source filename (defined in mappings JSON file)

os.chdir(globals.CSV_SOURCE_FOLDER);


# Start vitals data import
counter = 0
with open(os.path.abspath(filename), 'rU') as f:
    for row in csv.reader(f):
        if any(row) and counter > 0:
            # Even though the primary key used for patients' identifiers is auto-generated by MySQL
            # (sequential number), we still store the original MRN encrypted with MD5 hash
            # to link back to external records and to identify new patient records.
            rawMrn = stringutils.prefixZeros(row[map['MRN']], globals.MAX_MRN_LENGTH)
            mrn = stringutils.computeMD5hash(rawMrn)
            if mrn in patients.keys():
                # print(rawMrn)
                patientID = patients[mrn]


                # Contact date (needs to be formatted)
                contactDate = stringutils.convertDateToMySQL(row[map['CONTACT_DATE']].strip())

                # MEDICAL_HX
                hx = row[map['MEDICAL_HX']]


                # RELATION
                relation = row[map['RELATION']]

                # COMMENTS
                comments = row[map['COMMENTS']]



                sql = "INSERT INTO family_history (fk_patientID, contactDate, medical_hx, relation, comments) "
                sql += "VALUES (%s,%s,%s,%s,%s);"

                sqlutils.execMysqlQuery(sql, (str(patientID), contactDate, hx, relation, comments))


        counter = counter + 1  # Note - counter is only used to ignore the first row of the spreadsheet (contains column headings)


